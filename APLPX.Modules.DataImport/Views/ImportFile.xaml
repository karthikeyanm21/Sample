<UserControl x:Class="APLPX.Modules.DataImport.Views.ImportFile"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:dragdrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:ViewModel="clr-namespace:APLPX.Modules.DataImport.ViewModels"  AllowDrop="True">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>
    <UserControl.DataContext>
        <ViewModel:ImportFileViewModel/>
    </UserControl.DataContext>
    <Grid Margin="10,10,0,66">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border Background="#555555" CornerRadius="5,5,5,5" Height="328" dragdrop:DragDrop.IsDropTarget="True" dragdrop:DragDrop.DropHandler="{Binding}" Margin="0,0,0,340" Width="1200">
            <StackPanel>
                <TextBlock Text="Select Data Files For Import" FontFamily="Segoe UI" FontWeight="Bold" FontSize="16" HorizontalAlignment="Center" Margin="0,10,0,8"/>
                <Line Stroke="White" X1="0" Y1="5" X2="600" Y2="5" HorizontalAlignment="Center" Margin="0,10,0,8" ></Line>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <DataGrid x:Name="MetroDataGrid"
                  Grid.Column="1"
                  Grid.Row="1"                
                  Height="210"
                  AutoGenerateColumns="False"
                  GridLinesVisibility="None" 
                  CanUserAddRows="False"
                  Margin="25,5,25,0"
                  Style="{StaticResource MetroDataGrid}"
                  SelectionUnit="Cell"
                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                              
                  ItemsSource="{Binding ImportedFileCollection}" RenderTransformOrigin="0.5,0.5">
                        <DataGrid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform AngleY="-0.205"/>
                                <RotateTransform/>
                                <TranslateTransform Y="-1.489"/>
                            </TransformGroup>
                        </DataGrid.RenderTransform>

                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="75">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <CheckBox Name="CheckSelectAll" IsChecked="{Binding DataContext.IsSelectAll,Mode=TwoWay, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Margin="8,0,0,0" x:Name="rowCheck" IsChecked="{Binding Path=IsSelected, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ></CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="File Name" Width="200" IsReadOnly="True"
                                    Binding="{Binding Name}" >
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Path}" />
                                        <Setter Property="Margin" Value="0,4,0,0"></Setter>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="CreateDate" Width="150" IsReadOnly="True"
                                    Binding="{Binding DateModified}" />
                            <DataGridTextColumn Header="Type" Width="100" IsReadOnly="True"
                                    Binding="{Binding Type}" />
                            <DataGridTextColumn Header="Size" Width="100" IsReadOnly="True"
                                    Binding="{Binding Size}" />
                            <DataGridTemplateColumn Header="Status" Width="200">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <ProgressBar Height="22" Width="180" Maximum="100" Value="{Binding Progress}" Visibility="{Binding FileProgressVisible, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}"></ProgressBar>
                                            <TextBlock Text="{Binding FileStatus}" Visibility="{Binding FileStatusVisible, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </ScrollViewer>
            </StackPanel>
        </Border>

        <Border x:Name="DragOverlay" Visibility="{Binding IsDragOverFlag, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}" BorderThickness="3,3,3,3" dragdrop:DragDrop.IsDropTarget="True" dragdrop:DragDrop.DropHandler="{Binding}" Margin="75,98,78,395">
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.3"></SolidColorBrush>
            </Border.Background>
            <Border.BorderBrush>
                <DrawingBrush Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing Brush="White">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="0,0,50,50" />
                                        <RectangleGeometry Rect="50,50,50,50" />
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Border.BorderBrush>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image Source="/Resources/DragIcon.png"  Height="40" Width="30"></Image>
                <TextBlock Text="Drop files here" FontFamily="Segoe UI" HorizontalAlignment="Center" FontSize="24" VerticalAlignment="Center" Margin="5"/>
            </StackPanel>
        </Border>

        <Button Margin="25,290,0,355"  Command="{Binding BrowseFileCmd}" Width="79" HorizontalAlignment="Left">
            <TextBlock Text="Browse" Height="23" Width="56" FontSize="14"/>
        </Button>

        <Button Command="{Binding ImportDataCmd}" HorizontalAlignment="Left"  Width="116" Margin="109,290,0,355">
            <TextBlock Text="Import Data" Height="21" Width="86" FontSize="14"/>
        </Button>
        <Button Command="{Binding RemoveUploadFileCmd}" HorizontalAlignment="Left" CommandParameter="{Binding}"  Width="91" Margin="230,290,0,355">
            <TextBlock Text="Delete" Height="19" Width="43" FontSize="14"/>
        </Button>
        <!--TODO : Max Screen size icon needs to be implement-->
        <!--<Button Command="{Binding ExistFullScreenCmd}" Visibility="{Binding EnableExistFullScreenBtn, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}"
                    Margin="{Binding Path=ImportDataMargin}"
                    Style="{DynamicResource MetroCircleButtonStyle}"
                    BorderThickness="0">           
                <Rectangle Width="13"
                           Height="15"                           
                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill" 
                                     Visual="{DynamicResource appbar_arrow_collapsed}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>
        <Button Command="{Binding FullScreenCmd}" Visibility="{Binding EnableFullScreenBtn, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}"
                    Margin="{Binding Path=ImportDataMargin}"
                    Style="{DynamicResource MetroCircleButtonStyle}"
                    BorderThickness="0">           
            <Rectangle Width="13"
                           Height="15"                           
                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill" 
                                     Visual="{DynamicResource appbar_arrow_expand}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>-->
        <!--END : Max Screen size icon needs to be implement-->
        <Expander HorizontalAlignment="Left"  VerticalAlignment="Top" Margin="0,339,0,0" Height="209" Width="1200" Background="#555555" BorderBrush="#555555" ExpandDirection="Down" IsExpanded="{Binding IsResultFeatureModuleVisible}" >
            <Expander.Header>
                <BulletDecorator Height="25">
                    <BulletDecorator.Bullet>
                        <Button Width="43" Command="{Binding RefreshResultsetCmd}" 
                    Height="30"
                    Margin="1100,0,0,0"
                                
                    Style="{DynamicResource MetroCircleButtonStyle}">
                            <Rectangle Width="13"
                           Height="15"
                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" 
                                     Visual="{DynamicResource appbar_refresh}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </BulletDecorator.Bullet>
                </BulletDecorator>
            </Expander.Header>
            <Grid Background="#555555" >

                <TextBlock  Text="Result Data for Imported File" FontFamily="Segoe UI" FontWeight="Bold" FontSize="16" HorizontalAlignment="Center" Margin="282,345,332,-30"/>

                <DataGrid x:Name="MetroDataGrid1"
                  RenderOptions.ClearTypeHint="Enabled"
                  TextOptions.TextFormattingMode="Display"
                  GridLinesVisibility="None" 
                  ItemsSource="{Binding ImportFileResult,NotifyOnTargetUpdated=True,IsAsync=True,Mode=TwoWay,NotifyOnSourceUpdated=True}"
                  SelectedItem="{Binding SelectedRow, Mode=TwoWay}"
                  Margin="10,0,31,10"
                  SelectionUnit="FullRow" 
                  CanUserAddRows="False"
                  AutoGenerateColumns="False">
                    <DataGrid.InputBindings>

                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Path=DataContext.RowClickCmd, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" />

                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Import Datafile" Binding="{Binding FileName,Mode=TwoWay}" IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="ToolTip" Value="{Binding SoucreFilePath}" />
                                    <Setter Property="Margin" Value="0,4,0,0"></Setter>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Type" Binding="{Binding Format,Mode=TwoWay}" IsReadOnly="True"/>
                        <DataGridTextColumn Header=" # Records" Binding="{Binding RowsInFile,Mode=TwoWay}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="# Recs Successful"  Binding="{Binding RowsImported,Mode=TwoWay}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="# Recs Errors" Binding="{Binding RowsWithError,Mode=TwoWay}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Error FileName" Binding="{Binding ErrorFileName,Mode=TwoWay}" IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="ToolTip" Value="{Binding ErrorFilePath}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="StartTime" Binding="{Binding StartTime,Mode=TwoWay}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="EndTime" Binding="{Binding EndTime,Mode=TwoWay}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Duration" Binding="{Binding Duration,Mode=TwoWay}" IsReadOnly="True"/>
                    </DataGrid.Columns>

                </DataGrid>
            </Grid>
        </Expander>
    </Grid>
</UserControl>
