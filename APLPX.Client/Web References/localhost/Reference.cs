//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace APLPX.Client.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IAplService", Namespace="http://tempuri.org/")]
    public partial class AplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckStagingDBConfigByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStagingDbInfoByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveStagingDbConnStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyBRuleForImportedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateResultTableOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AplService() {
            this.Url = global::APLPX.Client.Properties.Settings.Default.APLPX_Client_localhost_AplService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckStagingDBConfigByUserIdCompletedEventHandler CheckStagingDBConfigByUserIdCompleted;
        
        /// <remarks/>
        public event GetStagingDbInfoByUserCompletedEventHandler GetStagingDbInfoByUserCompleted;
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event SaveStagingDbConnStringCompletedEventHandler SaveStagingDbConnStringCompleted;
        
        /// <remarks/>
        public event SaveImportDataCompletedEventHandler SaveImportDataCompleted;
        
        /// <remarks/>
        public event ApplyBRuleForImportedDataCompletedEventHandler ApplyBRuleForImportedDataCompleted;
        
        /// <remarks/>
        public event GetResultSetCompletedEventHandler GetResultSetCompleted;
        
        /// <remarks/>
        public event UpdateResultTableCompletedEventHandler UpdateResultTableCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAplService/CheckStagingDBConfigByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckStagingDBConfigByUserId(int userid, [System.Xml.Serialization.XmlIgnoreAttribute()] bool useridSpecified, out bool CheckStagingDBConfigByUserIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CheckStagingDBConfigByUserIdResultSpecified) {
            object[] results = this.Invoke("CheckStagingDBConfigByUserId", new object[] {
                        userid,
                        useridSpecified});
            CheckStagingDBConfigByUserIdResult = ((bool)(results[0]));
            CheckStagingDBConfigByUserIdResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void CheckStagingDBConfigByUserIdAsync(int userid, bool useridSpecified) {
            this.CheckStagingDBConfigByUserIdAsync(userid, useridSpecified, null);
        }
        
        /// <remarks/>
        public void CheckStagingDBConfigByUserIdAsync(int userid, bool useridSpecified, object userState) {
            if ((this.CheckStagingDBConfigByUserIdOperationCompleted == null)) {
                this.CheckStagingDBConfigByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStagingDBConfigByUserIdOperationCompleted);
            }
            this.InvokeAsync("CheckStagingDBConfigByUserId", new object[] {
                        userid,
                        useridSpecified}, this.CheckStagingDBConfigByUserIdOperationCompleted, userState);
        }
        
        private void OnCheckStagingDBConfigByUserIdOperationCompleted(object arg) {
            if ((this.CheckStagingDBConfigByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStagingDBConfigByUserIdCompleted(this, new CheckStagingDBConfigByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAplService/GetStagingDbInfoByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetStagingDbInfoByUser(int userId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIdSpecified) {
            object[] results = this.Invoke("GetStagingDbInfoByUser", new object[] {
                        userId,
                        userIdSpecified});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStagingDbInfoByUserAsync(int userId, bool userIdSpecified) {
            this.GetStagingDbInfoByUserAsync(userId, userIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetStagingDbInfoByUserAsync(int userId, bool userIdSpecified, object userState) {
            if ((this.GetStagingDbInfoByUserOperationCompleted == null)) {
                this.GetStagingDbInfoByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStagingDbInfoByUserOperationCompleted);
            }
            this.InvokeAsync("GetStagingDbInfoByUser", new object[] {
                        userId,
                        userIdSpecified}, this.GetStagingDbInfoByUserOperationCompleted, userState);
        }
        
        private void OnGetStagingDbInfoByUserOperationCompleted(object arg) {
            if ((this.GetStagingDbInfoByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStagingDbInfoByUserCompleted(this, new GetStagingDbInfoByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAplService/TestConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TestConnection([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StagingDbConfig stagingDbConfig) {
            object[] results = this.Invoke("TestConnection", new object[] {
                        stagingDbConfig});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionAsync(StagingDbConfig stagingDbConfig) {
            this.TestConnectionAsync(stagingDbConfig, null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(StagingDbConfig stagingDbConfig, object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[] {
                        stagingDbConfig}, this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new TestConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAplService/SaveStagingDbConnString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SaveStagingDbConnString([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StagingDbConfig stagingDbConfigInfo) {
            object[] results = this.Invoke("SaveStagingDbConnString", new object[] {
                        stagingDbConfigInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveStagingDbConnStringAsync(StagingDbConfig stagingDbConfigInfo) {
            this.SaveStagingDbConnStringAsync(stagingDbConfigInfo, null);
        }
        
        /// <remarks/>
        public void SaveStagingDbConnStringAsync(StagingDbConfig stagingDbConfigInfo, object userState) {
            if ((this.SaveStagingDbConnStringOperationCompleted == null)) {
                this.SaveStagingDbConnStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveStagingDbConnStringOperationCompleted);
            }
            this.InvokeAsync("SaveStagingDbConnString", new object[] {
                        stagingDbConfigInfo}, this.SaveStagingDbConnStringOperationCompleted, userState);
        }
        
        private void OnSaveStagingDbConnStringOperationCompleted(object arg) {
            if ((this.SaveStagingDbConnStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveStagingDbConnStringCompleted(this, new SaveStagingDbConnStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAplService/SaveImportData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveImportData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Data.DataSet stagingData, out bool SaveImportDataResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SaveImportDataResultSpecified) {
            object[] results = this.Invoke("SaveImportData", new object[] {
                        stagingData});
            SaveImportDataResult = ((bool)(results[0]));
            SaveImportDataResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SaveImportDataAsync(System.Data.DataSet stagingData) {
            this.SaveImportDataAsync(stagingData, null);
        }
        
        /// <remarks/>
        public void SaveImportDataAsync(System.Data.DataSet stagingData, object userState) {
            if ((this.SaveImportDataOperationCompleted == null)) {
                this.SaveImportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImportDataOperationCompleted);
            }
            this.InvokeAsync("SaveImportData", new object[] {
                        stagingData}, this.SaveImportDataOperationCompleted, userState);
        }
        
        private void OnSaveImportDataOperationCompleted(object arg) {
            if ((this.SaveImportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImportDataCompleted(this, new SaveImportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAplService/ApplyBRuleForImportedData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet ApplyBRuleForImportedData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Data.DataSet importedData, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out System.Data.DataSet passedRows) {
            object[] results = this.Invoke("ApplyBRuleForImportedData", new object[] {
                        importedData});
            passedRows = ((System.Data.DataSet)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyBRuleForImportedDataAsync(System.Data.DataSet importedData) {
            this.ApplyBRuleForImportedDataAsync(importedData, null);
        }
        
        /// <remarks/>
        public void ApplyBRuleForImportedDataAsync(System.Data.DataSet importedData, object userState) {
            if ((this.ApplyBRuleForImportedDataOperationCompleted == null)) {
                this.ApplyBRuleForImportedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyBRuleForImportedDataOperationCompleted);
            }
            this.InvokeAsync("ApplyBRuleForImportedData", new object[] {
                        importedData}, this.ApplyBRuleForImportedDataOperationCompleted, userState);
        }
        
        private void OnApplyBRuleForImportedDataOperationCompleted(object arg) {
            if ((this.ApplyBRuleForImportedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyBRuleForImportedDataCompleted(this, new ApplyBRuleForImportedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAplService/GetResultSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetResultSet() {
            object[] results = this.Invoke("GetResultSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultSetAsync() {
            this.GetResultSetAsync(null);
        }
        
        /// <remarks/>
        public void GetResultSetAsync(object userState) {
            if ((this.GetResultSetOperationCompleted == null)) {
                this.GetResultSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultSetOperationCompleted);
            }
            this.InvokeAsync("GetResultSet", new object[0], this.GetResultSetOperationCompleted, userState);
        }
        
        private void OnGetResultSetOperationCompleted(object arg) {
            if ((this.GetResultSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultSetCompleted(this, new GetResultSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IAplService/UpdateResultTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateResultTable([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fileName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fileExt, int totalRows, [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalRowsSpecified, int importedRows, [System.Xml.Serialization.XmlIgnoreAttribute()] bool importedRowsSpecified, int errorRows, [System.Xml.Serialization.XmlIgnoreAttribute()] bool errorRowsSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sourceFilePath, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string errorFileName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string errorFilePath, System.DateTime startTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, out bool UpdateResultTableResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateResultTableResultSpecified) {
            object[] results = this.Invoke("UpdateResultTable", new object[] {
                        fileName,
                        fileExt,
                        totalRows,
                        totalRowsSpecified,
                        importedRows,
                        importedRowsSpecified,
                        errorRows,
                        errorRowsSpecified,
                        sourceFilePath,
                        errorFileName,
                        errorFilePath,
                        startTime,
                        startTimeSpecified});
            UpdateResultTableResult = ((bool)(results[0]));
            UpdateResultTableResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateResultTableAsync(string fileName, string fileExt, int totalRows, bool totalRowsSpecified, int importedRows, bool importedRowsSpecified, int errorRows, bool errorRowsSpecified, string sourceFilePath, string errorFileName, string errorFilePath, System.DateTime startTime, bool startTimeSpecified) {
            this.UpdateResultTableAsync(fileName, fileExt, totalRows, totalRowsSpecified, importedRows, importedRowsSpecified, errorRows, errorRowsSpecified, sourceFilePath, errorFileName, errorFilePath, startTime, startTimeSpecified, null);
        }
        
        /// <remarks/>
        public void UpdateResultTableAsync(string fileName, string fileExt, int totalRows, bool totalRowsSpecified, int importedRows, bool importedRowsSpecified, int errorRows, bool errorRowsSpecified, string sourceFilePath, string errorFileName, string errorFilePath, System.DateTime startTime, bool startTimeSpecified, object userState) {
            if ((this.UpdateResultTableOperationCompleted == null)) {
                this.UpdateResultTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateResultTableOperationCompleted);
            }
            this.InvokeAsync("UpdateResultTable", new object[] {
                        fileName,
                        fileExt,
                        totalRows,
                        totalRowsSpecified,
                        importedRows,
                        importedRowsSpecified,
                        errorRows,
                        errorRowsSpecified,
                        sourceFilePath,
                        errorFileName,
                        errorFilePath,
                        startTime,
                        startTimeSpecified}, this.UpdateResultTableOperationCompleted, userState);
        }
        
        private void OnUpdateResultTableOperationCompleted(object arg) {
            if ((this.UpdateResultTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateResultTableCompleted(this, new UpdateResultTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/APLPX.Services")]
    public partial class StagingDbConfig {
        
        private string authenticationField;
        
        private string databaseNameField;
        
        private string logInField;
        
        private string passwordField;
        
        private string serverNameField;
        
        private string serverTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authentication {
            get {
                return this.authenticationField;
            }
            set {
                this.authenticationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DatabaseName {
            get {
                return this.databaseNameField;
            }
            set {
                this.databaseNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LogIn {
            get {
                return this.logInField;
            }
            set {
                this.logInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ServerName {
            get {
                return this.serverNameField;
            }
            set {
                this.serverNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ServerType {
            get {
                return this.serverTypeField;
            }
            set {
                this.serverTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckStagingDBConfigByUserIdCompletedEventHandler(object sender, CheckStagingDBConfigByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStagingDBConfigByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStagingDBConfigByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool CheckStagingDBConfigByUserIdResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool CheckStagingDBConfigByUserIdResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStagingDbInfoByUserCompletedEventHandler(object sender, GetStagingDbInfoByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStagingDbInfoByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStagingDbInfoByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void TestConnectionCompletedEventHandler(object sender, TestConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveStagingDbConnStringCompletedEventHandler(object sender, SaveStagingDbConnStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveStagingDbConnStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveStagingDbConnStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveImportDataCompletedEventHandler(object sender, SaveImportDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool SaveImportDataResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool SaveImportDataResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApplyBRuleForImportedDataCompletedEventHandler(object sender, ApplyBRuleForImportedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyBRuleForImportedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyBRuleForImportedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet passedRows {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetResultSetCompletedEventHandler(object sender, GetResultSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateResultTableCompletedEventHandler(object sender, UpdateResultTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateResultTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateResultTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateResultTableResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateResultTableResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591